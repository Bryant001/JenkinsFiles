pipeline {
    agent any
    stages {
        //withCredentials uses credentials plugin with credentials stored in configuration
		stage('DAST Essentials') {
			steps {
				withCredentials([ usernamePassword (credentialsId: 'veracode_login', usernameVariable: 'VERACODE_API_KEY_ID', passwordVariable: 'VERACODE_API_KEY_SECRET') ]) {
					script { 
					    echo 'Set variables for findings report'
					    WEBHOOK='8297440b-3dae-4e35-a83c-5311b97f97aa'
						API_ID=${VERACODE_API_KEY_ID}
						API_SECRET=${VERACODE_API_KEY_SECRET}
						//Set the API endpoint
						//Use “api.veracode.com” for US instance or “api.veracode.eu” for EU instance
						API_ENDPOINT="api.veracode.com"
						API_PATH=/dae/api/core-api/webhook

						try {
						    sh """#!/bin/bash
								echo Stop the script as soon as the first command fails
								set -euo pipefail
								
								generate_hmac_header() { 
								VERACODE_AUTH_SCHEMA="VERACODE-HMAC-SHA-256"
								VERACODE_API_VERSION="vcode_request_version_1"
								signing_data=\$1 
								nonce="\$(openssl rand -hex 16)"
								timestamp=\$(date +%s"000")

								nonce_key=\$(echo "\$nonce" | xxd -r -p | openssl dgst -sha256 -mac HMAC -macopt hexkey:"\$API_SECRET" | awk -F" " '{ print \$2 }')
								time_key=\$(echo -n "\$timestamp" | openssl dgst -sha256 -mac HMAC -macopt hexkey:"\$nonce_key" | awk -F" " '{ print \$2 }')
								sig_key=\$(echo -n "\$VERACODE_API_VERSION" | openssl dgst -sha256 -mac HMAC -macopt hexkey:"\$time_key" | awk -F" " '{ print \$2 }')
								signature=\$(echo -n "\$signing_data" | openssl dgst -sha256 -mac HMAC -macopt hexkey:"\$sig_key" | awk -F" " '{ print \$2 }')

								echo "$VERACODE_AUTH_SCHEMA id=\$API_ID,ts=\$timestamp,nonce=\$nonce,sig=\$signature"
								} 

								#### Start Security Scan ####
								# Start Scan and get scan ID
								signing_data="id=\$API_ID&host=\$API_ENDPOINT&url=\$API_PATH/\$WEBHOOK&method=POST"

								VERACODE_AUTH_HEADER=\$(generate_hmac_header \$signing_data)
								curl -X POST -H "Authorization: \$VERACODE_AUTH_HEADER" --data "" https://\$API_ENDPOINT\$API_PATH/\$WEBHOOK
								"""
						} catch (err) { 
							echo 'Error code: ' + err.getMessage().substring(26)
						}
					echo 'end of test'
					}
				}
			}
		}
	}
	post {
		always {
		  archiveArtifacts artifacts: 'findings.json', fingerprint: true
		}
	}
}
